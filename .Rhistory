words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
library(ggplot2)
library(tidyverse)
library(fpp2)
library(tidyquant)
library(scales)
#install.packages("wordcloud")
library(wordcloud)
#install.packages("RColorBrewer")
library(RColorBrewer)
#install.packages("wordcloud2")
library(wordcloud2)
#install.packages("tm")
library(tm)
tagalog_stopwords <- read.table(file="genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(fpp2)
library(tidyquant)
library(scales)
#install.packages("wordcloud")
library(wordcloud)
#install.packages("RColorBrewer")
library(RColorBrewer)
#install.packages("wordcloud2")
library(wordcloud2)
#install.packages("tm")
library(tm)
comments <- read.csv(file="C:/Users/albie/Downloads/scores - comments.csv", header=FALSE)
posts <- read.csv(file="C:/Users/albie/Downloads/scores - posts.csv", header=FALSE)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
View(comments)
posts <- read.csv(file="C:/Users/albie/Downloads/AP - P6M Posts.csv", header=FALSE)
comments <- read.csv(file="C:/Users/albie/Downloads/AP - P6M Comments.csv", header=FALSE)
View(comments)
posts <- read.csv(file="C:/Users/albie/Downloads/AP - P6M Posts.csv", header=TRUE)
comments <- read.csv(file="C:/Users/albie/Downloads/AP - P6M Comments.csv", header=TRUE)
View(posts)
names(comments)[3] <- "Message"
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(posts)
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
makeWordCloud(comments)
makeWordCloud(comments)
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
tagalog_stopwords <- read.table(file="C:/Users/albie/Downloads/Rappler Exam/genediazjr-tagalog.txt", header=FALSE)
tagalog_stopwords <- as.vector(tagalog_stopwords$V1)
makeWordCloud <- function(dataset){
textt <- dataset$Message
# Create a corpus
docs <- VCorpus(VectorSource(textt))
# Clean your text data
removeURL <- content_transformer(function(x) gsub("(f|ht)tp(s?)://\\S+", "", x, perl=T))
docs <- tm_map(docs, removeURL)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeWords, c(stopwords("english"),tagalog_stopwords))
# Create document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df <- data.frame(word = names(words),freq=words)
# Generate a word cloud
par(mar=c(6,3,3,6), mgp=c(3, 1, 0), las=0)
set.seed(1234) # for reproducibility
return(wordcloud2(data=df, size=1.6, color='random-dark',shape='circle'))
}
makeWordCloud(comments)
rm(list=ls())
library(ggplot2)
library(tidyverse)
library(fpp2)
library(tidyquant)
library(scales)
library(grid)
library(ggpattern)
library(randomcoloR)
library(dplyr)
df_Intervals <- as.data.frame(matrix(NA,nrow=0,ncol=6))
filenames <- Sys.glob("C:/Users/albie/OneDrive/Documents/AppMathThesis/Results/Phylogenetic/Intervals/*.txt")
for (i in 1:length(filenames)){
df_Intervals <- rbind(df_Intervals, read.table(file=filenames[i], header=TRUE))
}
chr1Data <- subset(aggregatedTotalFeatures, Chromosome == "Chromosome  1", select = c("Chromosome","Type","Dimension", "Iteration", "Birth"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + facet_grid(~chr1Data$Iteration) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
aggregatedTotalFeatures <- aggregate(Birth~Chromosome+Type+Dimension+Iteration, df_Intervals, length)
chr1Data <- subset(aggregatedTotalFeatures, Chromosome == "Chromosome  1", select = c("Chromosome","Type","Dimension", "Iteration", "Birth"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + facet_grid(~chr1Data$Iteration) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
chr1to3 <- subset(aggregatedTotalFeatures, Chromosome == "Chromosome  1" | Chromosome == "Chromosome  2" | Chromosome == "Chromosome  3")
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_continuous("Iteration", labels = as.character(Iteration), breaks = Iteration)
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_continuous("Iteration", labels = as.character(Iteration))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_text(angle=90),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + scale_x_discrete(guide=guide_axis(n.dodge = 1)) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + scale_x_discrete(guide=guide_axis(check.overlap = TRUE)) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_text(size = 12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + scale_x_discrete(guide=guide_axis(check.overlap = TRUE)) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_text(face="bold", size = 12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(face="bold", size = 12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(data = chr1Data, aes(x = as.factor(Iteration), y = Birth, fill = as.factor(Dimension), pattern = as.factor(Type))) +
geom_bar_pattern(position = position_dodge(preserve = "single"),
color = "black",
pattern_fill = "black",
pattern_angle = 45,
pattern_density = 0.1,
pattern_spacing = 0.025,
pattern_key_scale_factor = 0.6,
stat = "identity") +
scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00", "red"))(4)) +
scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) +
labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") +
guides(pattern = guide_legend(override.aes = list(fill = "white")),
fill = guide_legend(override.aes = list(pattern = "none")))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 7), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 8) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_discrete(expand=expansion(mult=0.3))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_discrete("Cut")
chr1Data$Iteration <- factor(chr1Data$Iteration, levels = c("Iteration  1", "Iteration  2", "Iteration  3", "Iteration  4", "Iteration  5"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_discrete("Cut")
str(chr1Data)
View(chr1Data)
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_discrete("Cut") + coord_polar()
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_discrete("Cut") + coord_polar() + ylim(-100, 120)
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_discrete("Cut") + coord_polar() + ylim(-50, 60)
empty_bar <- 4
to_add <- data.frame(matridx(NA, empty_bar*nlevels(chr1Data$Iteration), ncol(data)))
colnames(to_add) <- colnames(chr1Data)
to_add$Iteration <- rep(levels(chr1Data$Iteration), each=empty_bar)
chr1Data <- rbind(data, to_add)
empty_bar <- 4
to_add <- data.frame(matrix(NA, empty_bar*nlevels(chr1Data$Iteration), ncol(data)))
colnames(to_add) <- colnames(chr1Data)
to_add$Iteration <- rep(levels(chr1Data$Iteration), each=empty_bar)
chr1Data <- rbind(data, to_add)
to_add <- data.frame(matrix(NA, empty_bar*nlevels(chr1Data$Iteration), ncol(data)))
View(chr1Data)
View(chr1Data)
View(chr1Data)
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_discrete("Cut") + coord_polar() + ylim(-50, 60)
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_text(size=12), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_discrete("Cut") #+ coord_polar() + ylim(-50, 60)
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_bar_pattern(aes(fill=Dimension), position=position_dodge2(preserve = "single", width = 8), color = "black",pattern_fill = "black",pattern_angle = 45,pattern_density = 0.1,pattern_spacing = 0.025,pattern_key_scale_factor = 0.6, stat="identity",width = 7) + labs(x = "Iteration", y = "Number of Intervals", pattern = "Admixed?") + scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) + scale_pattern_manual(values = c(Admixed = "stripe", Nonadmixed = "none")) + guides(pattern = guide_legend(override.aes = list(fill = "white")), fill = guide_legend(override.aes = list(pattern = "none"))) + scale_color_grey() + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines")) + scale_x_discrete("Cut") #+ coord_polar() + ylim(-50, 60)
library(ggplot2)
library(tidyverse)
library(fpp2)
library(tidyquant)
library(scales)
library(grid)
library(ggpattern)
library(randomcoloR)
library(dplyr)
ggplot(aggregatedTotalFeatures, aes(x=Iteration, y=Birth)) + geom_bar() + facet_wrap(~Chromosome)
rlang::last_error()
ggplot(aggregatedTotalFeatures, aes(x=Iteration, y=Birth)) + geom_bar()
View(aggregatedTotalFeatures)
ggplot(aggregatedTotalFeatures, aes(x=Iteration, y=Birth, color=Type)) + geom_bar(aes(fill=Dimension), position=position_dodge2(preserve = "single"), stat="identity",width = 8) + labs(y="Number of Intervals") + scale_color_grey() + facet_grid(~aggregatedTotalFeatures$Chromosome) + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(aggregatedTotalFeatures, aes(x=Iteration, y=Birth, color=Type)) + geom_bar(aes(fill=Dimension), position=position_dodge2(preserve = "single"), stat="identity",width = 8) + labs(y="Number of Intervals") + scale_color_grey() + facet_grid(~aggregatedTotalFeatures$Dimension) + theme_bw() + theme( strip.text = element_text(size=12,face="bold"),strip.background  = element_blank(), panel.grid.major = element_line(colour = "grey80"), panel.border = element_blank(), axis.title.x = element_blank(),axis.text.x = element_blank(),axis.ticks = element_blank(), panel.grid.minor.x=element_blank(), panel.grid.major.x=element_blank(), axis.title.y = element_text(size=18,face = "bold")) + theme(legend.position="bottom", panel.spacing = unit(1,"lines"))
ggplot(chr1Data, aes(x=Iteration, y=Birth, pattern = Type)) + geom_boxplot(aes(fill=Dimension))
ggplot(aggregatedTotalFeatures, aes(x=Iteration, y=Birth, pattern = Type)) + geom_boxplot(aes(fill=Dimension)) + facet_wrap(~Dimension)
ggplot(aggregatedTotalFeatures, aes(x=Iteration, y=Birth, pattern = Type)) + geom_boxplot_pattern(aes(fill=Dimension)) + facet_wrap(~Dimension)
getwd
getwd()
write.csv(aggregatedTotalFeatures,"C:/Users/albie/OneDrive/Documents", row.names = FALSE)
write.csv(aggregatedTotalFeatures,"C:/Users/albie/OneDrive/Documents/TotalFeatures.csv", row.names = FALSE)
install.packages('forecast')
setwd("C:/Users/albie/OneDrive/Desktop/Flood_NOAH")
library(forecast)
precipitation = read.csv(file="PRCP_Manila.csv")
time_series_prcp <- ts(precipitation$PRCP, start = 2000, frequency = 365)
setwd("C:/Users/albie/OneDrive/Desktop/Flood_NOAH")
library(forecast)
precipitation = read.csv(file="PRCP_Manila.csv")
time_series_prcp <- ts(precipitation$PRCP, start = 2000, frequency = 365)
fit_arima <- auto.arima(time_series_prcp, D = 1, stepwise = TRUE, seasonal = TRUE)
arima_forecast = forecast(fit_arima, h = 406)
autoplot
plot(arima_forecast)
fit_arima
